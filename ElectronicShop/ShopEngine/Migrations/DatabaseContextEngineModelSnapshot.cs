// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ShopEngine.Models;

namespace ShopEngine.Migrations
{
    [DbContext(typeof(DatabaseContextEngine))]
    partial class DatabaseContextEngineModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ShopEngine.Models.Database.Adress", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Apartement");

                    b.Property<string>("City");

                    b.Property<int>("Days");

                    b.Property<string>("House");

                    b.Property<string>("Street");

                    b.HasKey("ID");

                    b.ToTable("Adresses");
                });

            modelBuilder.Entity("ShopEngine.Models.Database.Basket", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Count");

                    b.Property<int?>("GoodID");

                    b.Property<int?>("UserID");

                    b.HasKey("ID");

                    b.HasIndex("GoodID");

                    b.HasIndex("UserID");

                    b.ToTable("Baskets");
                });

            modelBuilder.Entity("ShopEngine.Models.Database.Good", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CreatorID");

                    b.Property<DateTime>("DateTime");

                    b.Property<string>("ImageName");

                    b.Property<string>("Name");

                    b.Property<double>("Price");

                    b.HasKey("ID");

                    b.HasIndex("CreatorID");

                    b.ToTable("Goods");
                });

            modelBuilder.Entity("ShopEngine.Models.Database.Transaction", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AdressID");

                    b.Property<double>("Currency");

                    b.Property<DateTime>("DateTime");

                    b.Property<int?>("DeliveryManID");

                    b.Property<bool>("IsCancel");

                    b.Property<bool>("IsClose");

                    b.Property<bool>("IsDeliver");

                    b.Property<bool?>("IsUserDeliver");

                    b.Property<DateTime>("TimeDelivery");

                    b.Property<int?>("UserID");

                    b.HasKey("ID");

                    b.HasIndex("AdressID");

                    b.HasIndex("DeliveryManID");

                    b.HasIndex("UserID");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("ShopEngine.Models.Database.TransactionGoods", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Count");

                    b.Property<int?>("CreatorID");

                    b.Property<string>("Good");

                    b.Property<double>("Price");

                    b.Property<int?>("TransactionID");

                    b.HasKey("ID");

                    b.HasIndex("CreatorID");

                    b.HasIndex("TransactionID");

                    b.ToTable("TransactionGoods");
                });

            modelBuilder.Entity("ShopEngine.Models.Database.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Login");

                    b.Property<string>("Name");

                    b.Property<string>("PasswordHash");

                    b.Property<int>("UserType");

                    b.HasKey("ID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ShopEngine.Models.Database.Basket", b =>
                {
                    b.HasOne("ShopEngine.Models.Database.Good", "Good")
                        .WithMany()
                        .HasForeignKey("GoodID");

                    b.HasOne("ShopEngine.Models.Database.User", "User")
                        .WithMany()
                        .HasForeignKey("UserID");
                });

            modelBuilder.Entity("ShopEngine.Models.Database.Good", b =>
                {
                    b.HasOne("ShopEngine.Models.Database.User", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatorID");
                });

            modelBuilder.Entity("ShopEngine.Models.Database.Transaction", b =>
                {
                    b.HasOne("ShopEngine.Models.Database.Adress", "Adress")
                        .WithMany()
                        .HasForeignKey("AdressID");

                    b.HasOne("ShopEngine.Models.Database.User", "DeliveryMan")
                        .WithMany()
                        .HasForeignKey("DeliveryManID");

                    b.HasOne("ShopEngine.Models.Database.User", "User")
                        .WithMany()
                        .HasForeignKey("UserID");
                });

            modelBuilder.Entity("ShopEngine.Models.Database.TransactionGoods", b =>
                {
                    b.HasOne("ShopEngine.Models.Database.User", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatorID");

                    b.HasOne("ShopEngine.Models.Database.Transaction", "Transaction")
                        .WithMany("TransactionGoods")
                        .HasForeignKey("TransactionID");
                });
#pragma warning restore 612, 618
        }
    }
}
